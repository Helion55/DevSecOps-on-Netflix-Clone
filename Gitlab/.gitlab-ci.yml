stages:
  - test
  - build
  - scan
  - push

testing the application:
  stage: test
  tags:
    - shell
  script:
    - npm install
    - npm audit fix

building the application:
  stage: build
  tags:
    - shell
  script:
    - docker build --build-arg TMDB_V3_API_KEY=8f530dd84c306cdfda6770e0d05dfc82 -t $CI_REGISTRY_IMAGE/netflix-clone/netflix:1.0 .

scanning the application:
  stage: scan
  tags:
    - shell
  before_script:
    - sudo apt-get update
    - sudo apt-get install wget apt-transport-https gnupg lsb-release -y
    - wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
    - echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
    - sudo apt-get update
    - sudo apt-get install trivy -y
  script:
    - docker run -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy image $CI_REGISTRY_IMAGE/netflix-clone/netflix:1.0

pushing the image:
  stage: push
  tags: 
    - shell
  script:
    - docker images
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker push $CI_REGISTRY_IMAGE/netflix-clone/netflix:1.0